{"ast":null,"code":"var _jsxFileName = \"/Users/teslimadekoya/Desktop/frontend copy/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _user$email5;\n  const {\n    user,\n    updateUser,\n    updateCredentials\n  } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [showOldPassword, setShowOldPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    console.log('Profile component - current user:', user);\n    console.log('Profile component - localStorage user_data:', localStorage.getItem('user_data'));\n    console.log('Profile component - localStorage mock_users:', localStorage.getItem('mock_users'));\n\n    // Don't pre-populate the fields - let users enter what they want to change\n    setFormData({\n      username: '',\n      email: '',\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n  }, [user, navigate]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const togglePassword = field => {\n    switch (field) {\n      case 'old':\n        setShowOldPassword(!showOldPassword);\n        break;\n      case 'new':\n        setShowNewPassword(!showNewPassword);\n        break;\n      case 'confirm':\n        setShowConfirmPassword(!showConfirmPassword);\n        break;\n      default:\n        break;\n    }\n  };\n  const getInitial = () => {\n    if (user !== null && user !== void 0 && user.username) return user.username.charAt(0).toUpperCase();\n    if (user !== null && user !== void 0 && user.email) return user.email.charAt(0).toUpperCase();\n    return 'U';\n  };\n  const validateForm = () => {\n    var _user$email;\n    setError('');\n    setSuccess('');\n    const {\n      username,\n      email,\n      oldPassword,\n      newPassword,\n      confirmPassword\n    } = formData;\n\n    // Check if any field has been changed from its current value\n    const currentUsername = (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : (_user$email = user.email) === null || _user$email === void 0 ? void 0 : _user$email.split('@')[0]) || '';\n    const currentEmail = (user === null || user === void 0 ? void 0 : user.email) || '';\n    const isUpdatingUsername = username !== '' && username !== currentUsername;\n    const isUpdatingEmail = email !== '' && email !== currentEmail;\n    const isUpdatingPassword = newPassword !== '';\n    console.log('Validation check:', {\n      username,\n      currentUsername,\n      isUpdatingUsername,\n      email,\n      currentEmail,\n      isUpdatingEmail,\n      isUpdatingPassword,\n      newPassword: newPassword ? '***' : '',\n      confirmPassword: confirmPassword ? '***' : ''\n    });\n\n    // Validate username if changed\n    if (isUpdatingUsername) {\n      if (username.length < 3) {\n        setError(\"Username must be at least 3 characters long.\");\n        return false;\n      }\n      if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n        setError(\"Username can only contain letters, numbers, and underscores.\");\n        return false;\n      }\n    }\n\n    // Validate email if changed\n    if (isUpdatingEmail) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        setError(\"Please enter a valid email address.\");\n        return false;\n      }\n    }\n\n    // Validate password if changed\n    if (isUpdatingPassword) {\n      if (!oldPassword) {\n        setError(\"Please enter your current password to change it.\");\n        return false;\n      }\n\n      // Check if current password matches the stored password\n      const storedUsers = JSON.parse(localStorage.getItem('mock_users') || '[]');\n      const currentUser = storedUsers.find(u => u.email === user.email || u.username === user.username);\n      if (currentUser && currentUser.password !== oldPassword) {\n        setError(\"Current password is incorrect. Please enter the password you use to log in.\");\n        return false;\n      }\n      if (newPassword.length < 8) {\n        setError(\"New password must be at least 8 characters long.\");\n        return false;\n      }\n      if (newPassword === oldPassword) {\n        setError(\"New password cannot be the same as your current password.\");\n        return false;\n      }\n      if (newPassword !== confirmPassword) {\n        setError(\"New passwords do not match.\");\n        return false;\n      }\n    }\n\n    // Check if any field is being updated\n    if (!isUpdatingUsername && !isUpdatingEmail && !isUpdatingPassword) {\n      setError(\"No changes detected. Please modify at least one field to update.\");\n      return false;\n    }\n    return true;\n  };\n  const handleSaveChanges = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      var _user$email2;\n      const {\n        username,\n        email,\n        oldPassword,\n        newPassword\n      } = formData;\n\n      // Create update data object with only the changed fields\n      const updateData = {};\n      const currentUsername = (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : (_user$email2 = user.email) === null || _user$email2 === void 0 ? void 0 : _user$email2.split('@')[0]) || '';\n      const currentEmail = (user === null || user === void 0 ? void 0 : user.email) || '';\n      if (username !== '' && username !== currentUsername) {\n        updateData.username = username;\n      }\n      if (email !== '' && email !== currentEmail) {\n        updateData.email = email;\n      }\n      if (newPassword !== '') {\n        updateData.old_password = oldPassword;\n        updateData.new_password = newPassword;\n      }\n      console.log('Update data:', updateData);\n\n      // Make the actual API call to update profile\n      const response = await authAPI.updateProfile(updateData);\n      if (response.data && response.data.user) {\n        var _user$email3;\n        // Update the user context with the new data\n        updateUser(response.data.user);\n\n        // Update all localStorage keys that might contain user data\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        localStorage.setItem('user_data', JSON.stringify(response.data.user));\n\n        // Update stored credentials for any changed fields\n        const credentialsToUpdate = {};\n        if (username !== '' && username !== ((user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : (_user$email3 = user.email) === null || _user$email3 === void 0 ? void 0 : _user$email3.split('@')[0]))) {\n          credentialsToUpdate.username = username;\n        }\n        if (email !== '' && email !== (user === null || user === void 0 ? void 0 : user.email)) {\n          credentialsToUpdate.email = email;\n        }\n        if (newPassword !== '') {\n          credentialsToUpdate.password = newPassword;\n        }\n        if (Object.keys(credentialsToUpdate).length > 0) {\n          updateCredentials(user.id, credentialsToUpdate);\n        }\n        setSuccess('Profile updated successfully!');\n\n        // Clear password fields if password was updated\n        if (newPassword !== '') {\n          setFormData(prev => ({\n            ...prev,\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          }));\n        }\n      } else {\n        setSuccess('Profile updated successfully!');\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error updating profile:', error);\n\n      // Check if it's an authentication error\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        setError('Authentication failed. Please try again or log in again.');\n        // Don't automatically redirect - let user decide what to do\n        return;\n      }\n\n      // For other API errors, try fallback to localStorage\n      try {\n        var _user$email4;\n        const {\n          username,\n          email\n        } = formData;\n        const updatedUser = {\n          ...user\n        };\n        const currentUsername = (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : (_user$email4 = user.email) === null || _user$email4 === void 0 ? void 0 : _user$email4.split('@')[0]) || '';\n        const currentEmail = (user === null || user === void 0 ? void 0 : user.email) || '';\n        if (username !== '' && username !== currentUsername) {\n          updatedUser.username = username;\n        }\n        if (email !== '' && email !== currentEmail) {\n          updatedUser.email = email;\n        }\n        console.log('Fallback update - updatedUser:', updatedUser);\n\n        // Update user context and all localStorage keys\n        updateUser(updatedUser);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        localStorage.setItem('user_data', JSON.stringify(updatedUser));\n\n        // Update stored credentials for any changed fields\n        const credentialsToUpdate = {};\n        if (username !== '' && username !== currentUsername) {\n          credentialsToUpdate.username = username;\n        }\n        if (email !== '' && email !== currentEmail) {\n          credentialsToUpdate.email = email;\n        }\n        if (formData.newPassword !== '') {\n          credentialsToUpdate.password = formData.newPassword;\n        }\n        console.log('Fallback credentials to update:', credentialsToUpdate);\n        if (Object.keys(credentialsToUpdate).length > 0) {\n          updateCredentials(user.id, credentialsToUpdate);\n        }\n        setSuccess('Profile updated successfully! Your changes have been saved locally and will be visible throughout the app.');\n\n        // Clear password fields if password was updated\n        if (formData.newPassword !== '') {\n          setFormData(prev => ({\n            ...prev,\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          }));\n        }\n      } catch (fallbackError) {\n        console.error('Fallback error:', fallbackError);\n        setError('Failed to save profile changes. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!user) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex items-center justify-center px-[64px] max-md:px-[16px] mt-[160px] max-sm:mt-[120px] mb-[64px]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"custom-font font-[700] text-[28px] leading-[36px] text-[#010101] mb-[24px]\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 w-full flex flex-col items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-24 h-24 rounded-full bg-[#B20201] flex items-center justify-center mb-2\",\n            style: {\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              backgroundImage: user.profile_image ? `url(${user.profile_image})` : ''\n            },\n            children: !user.profile_image && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white text-3xl font-bold\",\n              children: getInitial()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"text-[18px] leading-[28px]\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleInputChange,\n            placeholder: `Current: ${(user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : (_user$email5 = user.email) === null || _user$email5 === void 0 ? void 0 : _user$email5.split('@')[0]) || 'Not set'}`,\n            className: \"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border border-[#D1D1D1] bg-gray-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-[14px] text-[#4E4E4E] mt-[4px]\",\n            children: \"Enter new username to update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"text-[18px] leading-[28px]\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange,\n            placeholder: `Current: ${(user === null || user === void 0 ? void 0 : user.email) || 'Not set'}`,\n            className: \"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border border-[#D1D1D1] bg-gray-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-[14px] text-[#4E4E4E] mt-[4px]\",\n            children: \"Enter new email to update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"oldPassword\",\n            className: \"text-[18px] leading-[28px]\",\n            children: \"Current Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showOldPassword ? \"text\" : \"password\",\n              id: \"oldPassword\",\n              name: \"oldPassword\",\n              placeholder: \"Enter your current password\",\n              value: formData.oldPassword,\n              onChange: handleInputChange,\n              className: \"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border bg-gray-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => togglePassword('old'),\n              className: \"absolute right-[16px] top-[50%] -translate-y-[50%]\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showOldPassword ? \"/images/Hide.svg\" : \"/images/See.svg\",\n                alt: showOldPassword ? \"Hide Password\" : \"Show Password\",\n                className: \"w-5 h-5 cursor-pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-[14px] text-[#4E4E4E] mt-[4px]\",\n            children: \"Required only if changing password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            className: \"text-[18px] leading-[28px]\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showNewPassword ? \"text\" : \"password\",\n              id: \"newPassword\",\n              name: \"newPassword\",\n              placeholder: \"Enter new password\",\n              value: formData.newPassword,\n              onChange: handleInputChange,\n              className: \"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border bg-gray-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => togglePassword('new'),\n              className: \"absolute right-[16px] top-[50%] -translate-y-[50%]\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showNewPassword ? \"/images/Hide.svg\" : \"/images/See.svg\",\n                alt: showNewPassword ? \"Hide Password\" : \"Show Password\",\n                className: \"w-5 h-5 cursor-pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-[14px] text-[#4E4E4E] mt-[4px]\",\n            children: \"Enter new password to update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"text-[18px] leading-[28px]\",\n            children: \"Confirm New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showConfirmPassword ? \"text\" : \"password\",\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              placeholder: \"Confirm new password\",\n              value: formData.confirmPassword,\n              onChange: handleInputChange,\n              className: \"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border bg-gray-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => togglePassword('confirm'),\n              className: \"absolute right-[16px] top-[50%] -translate-y-[50%]\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showConfirmPassword ? \"/images/Hide.svg\" : \"/images/See.svg\",\n                alt: showConfirmPassword ? \"Hide Password\" : \"Show Password\",\n                className: \"w-5 h-5 cursor-pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-[14px] text-[#4E4E4E] mt-[4px]\",\n            children: \"Required only if changing password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-600 text-[14px] font-medium mb-[16px] bg-red-50 p-[12px] rounded-[8px] border border-red-200 w-full\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-green-600 text-[14px] font-medium mb-[16px] bg-green-50 p-[12px] rounded-[8px] border border-green-200 w-full\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 flex justify-end w-full\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveChanges,\n            disabled: loading,\n            className: \"w-full py-[12px] text-[16px] text-white bg-[#B20201] font-[700] text-center hover:bg-[#900000] disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: loading ? 'Saving...' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Profile, \"VPP2pSEcon+DGqzLPesNvrHrc+I=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","useNavigate","authAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","_user$email5","user","updateUser","updateCredentials","navigate","loading","setLoading","showOldPassword","setShowOldPassword","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","error","setError","success","setSuccess","formData","setFormData","username","email","oldPassword","newPassword","confirmPassword","console","log","localStorage","getItem","handleInputChange","e","name","value","target","prev","togglePassword","field","getInitial","charAt","toUpperCase","validateForm","_user$email","currentUsername","split","currentEmail","isUpdatingUsername","isUpdatingEmail","isUpdatingPassword","length","test","emailRegex","storedUsers","JSON","parse","currentUser","find","u","password","handleSaveChanges","_user$email2","updateData","old_password","new_password","response","updateProfile","data","_user$email3","setItem","stringify","credentialsToUpdate","Object","keys","id","_error$response","status","_user$email4","updatedUser","fallbackError","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundSize","backgroundPosition","backgroundImage","profile_image","htmlFor","type","onChange","placeholder","onClick","src","alt","disabled","_c","$RefreshReg$"],"sources":["/Users/teslimadekoya/Desktop/frontend copy/pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { authAPI } from '../services/api';\n\nconst Profile = () => {\n  const { user, updateUser, updateCredentials } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [showOldPassword, setShowOldPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  \n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    console.log('Profile component - current user:', user);\n    console.log('Profile component - localStorage user_data:', localStorage.getItem('user_data'));\n    console.log('Profile component - localStorage mock_users:', localStorage.getItem('mock_users'));\n\n    // Don't pre-populate the fields - let users enter what they want to change\n    setFormData({\n      username: '',\n      email: '',\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n  }, [user, navigate]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const togglePassword = (field) => {\n    switch (field) {\n      case 'old':\n        setShowOldPassword(!showOldPassword);\n        break;\n      case 'new':\n        setShowNewPassword(!showNewPassword);\n        break;\n      case 'confirm':\n        setShowConfirmPassword(!showConfirmPassword);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getInitial = () => {\n    if (user?.username) return user.username.charAt(0).toUpperCase();\n    if (user?.email) return user.email.charAt(0).toUpperCase();\n    return 'U';\n  };\n\n  const validateForm = () => {\n    setError('');\n    setSuccess('');\n\n    const { username, email, oldPassword, newPassword, confirmPassword } = formData;\n\n    // Check if any field has been changed from its current value\n    const currentUsername = user?.username || user?.email?.split('@')[0] || '';\n    const currentEmail = user?.email || '';\n    \n    const isUpdatingUsername = username !== '' && username !== currentUsername;\n    const isUpdatingEmail = email !== '' && email !== currentEmail;\n    const isUpdatingPassword = newPassword !== '';\n\n    console.log('Validation check:', {\n      username,\n      currentUsername,\n      isUpdatingUsername,\n      email,\n      currentEmail,\n      isUpdatingEmail,\n      isUpdatingPassword,\n      newPassword: newPassword ? '***' : '',\n      confirmPassword: confirmPassword ? '***' : ''\n    });\n\n    // Validate username if changed\n    if (isUpdatingUsername) {\n      if (username.length < 3) {\n        setError(\"Username must be at least 3 characters long.\");\n        return false;\n      }\n      if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n        setError(\"Username can only contain letters, numbers, and underscores.\");\n        return false;\n      }\n    }\n\n    // Validate email if changed\n    if (isUpdatingEmail) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        setError(\"Please enter a valid email address.\");\n        return false;\n      }\n    }\n\n    // Validate password if changed\n    if (isUpdatingPassword) {\n      if (!oldPassword) {\n        setError(\"Please enter your current password to change it.\");\n        return false;\n      }\n      \n      // Check if current password matches the stored password\n      const storedUsers = JSON.parse(localStorage.getItem('mock_users') || '[]');\n      const currentUser = storedUsers.find(u => u.email === user.email || u.username === user.username);\n      \n      if (currentUser && currentUser.password !== oldPassword) {\n        setError(\"Current password is incorrect. Please enter the password you use to log in.\");\n        return false;\n      }\n      \n      if (newPassword.length < 8) {\n        setError(\"New password must be at least 8 characters long.\");\n        return false;\n      }\n      if (newPassword === oldPassword) {\n        setError(\"New password cannot be the same as your current password.\");\n        return false;\n      }\n      if (newPassword !== confirmPassword) {\n        setError(\"New passwords do not match.\");\n        return false;\n      }\n    }\n\n    // Check if any field is being updated\n    if (!isUpdatingUsername && !isUpdatingEmail && !isUpdatingPassword) {\n      setError(\"No changes detected. Please modify at least one field to update.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSaveChanges = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      const { username, email, oldPassword, newPassword } = formData;\n      \n      // Create update data object with only the changed fields\n      const updateData = {};\n      \n      const currentUsername = user?.username || user?.email?.split('@')[0] || '';\n      const currentEmail = user?.email || '';\n      \n      if (username !== '' && username !== currentUsername) {\n        updateData.username = username;\n      }\n      \n      if (email !== '' && email !== currentEmail) {\n        updateData.email = email;\n      }\n      \n      if (newPassword !== '') {\n        updateData.old_password = oldPassword;\n        updateData.new_password = newPassword;\n      }\n\n      console.log('Update data:', updateData);\n\n      // Make the actual API call to update profile\n      const response = await authAPI.updateProfile(updateData);\n      \n      if (response.data && response.data.user) {\n        // Update the user context with the new data\n        updateUser(response.data.user);\n        \n        // Update all localStorage keys that might contain user data\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        localStorage.setItem('user_data', JSON.stringify(response.data.user));\n        \n        // Update stored credentials for any changed fields\n        const credentialsToUpdate = {};\n        if (username !== '' && username !== (user?.username || user?.email?.split('@')[0])) {\n          credentialsToUpdate.username = username;\n        }\n        if (email !== '' && email !== user?.email) {\n          credentialsToUpdate.email = email;\n        }\n        if (newPassword !== '') {\n          credentialsToUpdate.password = newPassword;\n        }\n        \n        if (Object.keys(credentialsToUpdate).length > 0) {\n          updateCredentials(user.id, credentialsToUpdate);\n        }\n        \n        setSuccess('Profile updated successfully!');\n        \n        // Clear password fields if password was updated\n        if (newPassword !== '') {\n          setFormData(prev => ({\n            ...prev,\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          }));\n        }\n      } else {\n        setSuccess('Profile updated successfully!');\n      }\n\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      \n      // Check if it's an authentication error\n      if (error.response?.status === 401) {\n        setError('Authentication failed. Please try again or log in again.');\n        // Don't automatically redirect - let user decide what to do\n        return;\n      }\n      \n      // For other API errors, try fallback to localStorage\n      try {\n        const { username, email } = formData;\n        const updatedUser = { ...user };\n        \n        const currentUsername = user?.username || user?.email?.split('@')[0] || '';\n        const currentEmail = user?.email || '';\n        \n        if (username !== '' && username !== currentUsername) {\n          updatedUser.username = username;\n        }\n        \n        if (email !== '' && email !== currentEmail) {\n          updatedUser.email = email;\n        }\n        \n        console.log('Fallback update - updatedUser:', updatedUser);\n        \n        // Update user context and all localStorage keys\n        updateUser(updatedUser);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        localStorage.setItem('user_data', JSON.stringify(updatedUser));\n        \n        // Update stored credentials for any changed fields\n        const credentialsToUpdate = {};\n        if (username !== '' && username !== currentUsername) {\n          credentialsToUpdate.username = username;\n        }\n        if (email !== '' && email !== currentEmail) {\n          credentialsToUpdate.email = email;\n        }\n        if (formData.newPassword !== '') {\n          credentialsToUpdate.password = formData.newPassword;\n        }\n        \n        console.log('Fallback credentials to update:', credentialsToUpdate);\n        \n        if (Object.keys(credentialsToUpdate).length > 0) {\n          updateCredentials(user.id, credentialsToUpdate);\n        }\n        \n        setSuccess('Profile updated successfully! Your changes have been saved locally and will be visible throughout the app.');\n        \n        // Clear password fields if password was updated\n        if (formData.newPassword !== '') {\n          setFormData(prev => ({\n            ...prev,\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          }));\n        }\n      } catch (fallbackError) {\n        console.error('Fallback error:', fallbackError);\n        setError('Failed to save profile changes. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <>\n      <main className=\"flex items-center justify-center px-[64px] max-md:px-[16px] mt-[160px] max-sm:mt-[120px] mb-[64px]\">\n        <div className=\"w-full max-w-md flex flex-col items-center\">\n          <h2 className=\"custom-font font-[700] text-[28px] leading-[36px] text-[#010101] mb-[24px]\">Profile</h2>\n                \n          {/* Avatar */}\n          <div className=\"mb-4 w-full flex flex-col items-center\">\n            <div \n              className=\"w-24 h-24 rounded-full bg-[#B20201] flex items-center justify-center mb-2\"\n              style={{\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n                backgroundImage: user.profile_image ? `url(${user.profile_image})` : ''\n              }}\n            >\n              {!user.profile_image && (\n                <span className=\"text-white text-3xl font-bold\">{getInitial()}</span>\n              )}\n                    </div>\n                  </div>\n\n          {/* Username */}\n          <div className=\"mb-4 w-full\">\n            <label htmlFor=\"username\" className=\"text-[18px] leading-[28px]\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleInputChange}\n              placeholder={`Current: ${user?.username || user?.email?.split('@')[0] || 'Not set'}`}\n              className=\"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border border-[#D1D1D1] bg-gray-100\" \n            />\n            <p className=\"text-[14px] text-[#4E4E4E] mt-[4px]\">Enter new username to update</p>\n          </div>\n\n          {/* Email */}\n          <div className=\"mb-4 w-full\">\n            <label htmlFor=\"email\" className=\"text-[18px] leading-[28px]\">Email Address</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              placeholder={`Current: ${user?.email || 'Not set'}`}\n              className=\"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border border-[#D1D1D1] bg-gray-100\" \n            />\n            <p className=\"text-[14px] text-[#4E4E4E] mt-[4px]\">Enter new email to update</p>\n          </div>\n\n          {/* Old Password */}\n          <div className=\"mb-4 w-full\">\n            <label htmlFor=\"oldPassword\" className=\"text-[18px] leading-[28px]\">Current Password</label>\n            <div className=\"relative\">\n              <input \n                type={showOldPassword ? \"text\" : \"password\"}\n                id=\"oldPassword\"\n                name=\"oldPassword\"\n                placeholder=\"Enter your current password\"\n                value={formData.oldPassword}\n                onChange={handleInputChange}\n                className=\"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border bg-gray-100\" \n              />\n              <button \n                type=\"button\" \n                onClick={() => togglePassword('old')}\n                className=\"absolute right-[16px] top-[50%] -translate-y-[50%]\"\n              >\n                <img \n                  src={showOldPassword ? \"/images/Hide.svg\" : \"/images/See.svg\"} \n                  alt={showOldPassword ? \"Hide Password\" : \"Show Password\"} \n                  className=\"w-5 h-5 cursor-pointer\" \n                />\n              </button>\n            </div>\n            <p className=\"text-[14px] text-[#4E4E4E] mt-[4px]\">Required only if changing password</p>\n          </div>\n\n          {/* New Password */}\n          <div className=\"mb-4 w-full\">\n            <label htmlFor=\"newPassword\" className=\"text-[18px] leading-[28px]\">New Password</label>\n            <div className=\"relative\">\n              <input \n                type={showNewPassword ? \"text\" : \"password\"}\n                id=\"newPassword\"\n                name=\"newPassword\"\n                placeholder=\"Enter new password\"\n                value={formData.newPassword}\n                onChange={handleInputChange}\n                className=\"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border bg-gray-100\" \n              />\n              <button \n                type=\"button\" \n                onClick={() => togglePassword('new')}\n                className=\"absolute right-[16px] top-[50%] -translate-y-[50%]\"\n              >\n                <img \n                  src={showNewPassword ? \"/images/Hide.svg\" : \"/images/See.svg\"} \n                  alt={showNewPassword ? \"Hide Password\" : \"Show Password\"} \n                  className=\"w-5 h-5 cursor-pointer\" \n                />\n              </button>\n            </div>\n            <p className=\"text-[14px] text-[#4E4E4E] mt-[4px]\">Enter new password to update</p>\n          </div>\n\n          {/* Confirm Password */}\n          <div className=\"mb-4 w-full\">\n            <label htmlFor=\"confirmPassword\" className=\"text-[18px] leading-[28px]\">Confirm New Password</label>\n            <div className=\"relative\">\n              <input \n                type={showConfirmPassword ? \"text\" : \"password\"}\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm new password\"\n                value={formData.confirmPassword}\n                onChange={handleInputChange}\n                className=\"w-full mt-[8px] px-[24px] py-[12px] rounded-[12px] border bg-gray-100\" \n              />\n              <button\n                type=\"button\" \n                onClick={() => togglePassword('confirm')}\n                className=\"absolute right-[16px] top-[50%] -translate-y-[50%]\"\n              >\n                <img \n                  src={showConfirmPassword ? \"/images/Hide.svg\" : \"/images/See.svg\"} \n                  alt={showConfirmPassword ? \"Hide Password\" : \"Show Password\"} \n                  className=\"w-5 h-5 cursor-pointer\" \n                />\n              </button>\n            </div>\n            <p className=\"text-[14px] text-[#4E4E4E] mt-[4px]\">Required only if changing password</p>\n          </div>\n\n          {/* Error/Success Messages */}\n          {error && (\n            <div className=\"text-red-600 text-[14px] font-medium mb-[16px] bg-red-50 p-[12px] rounded-[8px] border border-red-200 w-full\">\n              {error}\n            </div>\n          )}\n          \n          {success && (\n            <div className=\"text-green-600 text-[14px] font-medium mb-[16px] bg-green-50 p-[12px] rounded-[8px] border border-green-200 w-full\">\n              {success}\n            </div>\n          )}\n\n          {/* Save Button */}\n          <div className=\"mt-6 flex justify-end w-full\">\n            <button \n              onClick={handleSaveChanges}\n              disabled={loading}\n              className=\"w-full py-[12px] text-[16px] text-white bg-[#B20201] font-[700] text-center hover:bg-[#900000] disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? 'Saving...' : 'Save Changes'}\n            </button>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Profile; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}