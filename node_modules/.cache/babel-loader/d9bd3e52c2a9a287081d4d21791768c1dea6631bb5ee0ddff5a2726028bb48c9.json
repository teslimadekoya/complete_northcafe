{"ast":null,"code":"var _jsxFileName = \"/Users/teslimadekoya/Desktop/frontend copy/context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState({\n    items: [],\n    total_amount: 0\n  });\n  const [loading, setLoading] = useState(false);\n\n  // Simple localStorage helpers\n  const saveToLocalStorage = cartData => {\n    localStorage.setItem('localCart', JSON.stringify(cartData));\n  };\n  const loadFromLocalStorage = () => {\n    try {\n      const stored = localStorage.getItem('localCart');\n      return stored ? JSON.parse(stored) : {\n        items: [],\n        total_amount: 0\n      };\n    } catch (error) {\n      console.error('Error loading cart from localStorage:', error);\n      return {\n        items: [],\n        total_amount: 0\n      };\n    }\n  };\n\n  // Initialize cart on mount\n  useEffect(() => {\n    console.log('CartProvider: Initializing cart');\n    const localCart = loadFromLocalStorage();\n    if (localCart.items && localCart.items.length > 0) {\n      setCart(localCart);\n      console.log('CartProvider: Loaded cart from localStorage:', localCart);\n    }\n  }, []);\n\n  // Auto-save cart to localStorage whenever it changes\n  useEffect(() => {\n    if (cart.items && cart.items.length > 0) {\n      saveToLocalStorage(cart);\n      console.log('CartProvider: Auto-saved cart to localStorage:', cart);\n    }\n  }, [cart]);\n  const addToCart = async (mealId, portions = 1, portionsPerPlate = 1, plates = 1, specialInstructions = '', mealDetails = null) => {\n    console.log('Adding to cart:', {\n      mealId,\n      portions,\n      portionsPerPlate,\n      plates,\n      mealDetails\n    });\n    setLoading(true);\n    try {\n      // Always use localStorage for now - simple and reliable\n      const newItem = {\n        id: Date.now(),\n        meal_id: mealId,\n        portions: portions,\n        portionsPerPlate: portionsPerPlate,\n        plates: plates,\n        special_instructions: specialInstructions,\n        name: (mealDetails === null || mealDetails === void 0 ? void 0 : mealDetails.name) || `Meal ${mealId}`,\n        price: (mealDetails === null || mealDetails === void 0 ? void 0 : mealDetails.price) || 0,\n        image: (mealDetails === null || mealDetails === void 0 ? void 0 : mealDetails.image) || (mealDetails === null || mealDetails === void 0 ? void 0 : mealDetails.image_url) || '/images/menu/foodHovered.png'\n      };\n      const updatedCart = {\n        ...cart,\n        items: [...cart.items, newItem],\n        total_amount: cart.total_amount + portions * ((mealDetails === null || mealDetails === void 0 ? void 0 : mealDetails.price) || 0)\n      };\n      setCart(updatedCart);\n      saveToLocalStorage(updatedCart);\n      console.log('Successfully added to cart:', updatedCart);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      return {\n        success: false,\n        error: 'Failed to add to cart'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateCartItem = async (itemId, updates) => {\n    setLoading(true);\n    try {\n      const updatedItems = cart.items.map(item => item.id === itemId ? {\n        ...item,\n        ...updates\n      } : item);\n      const updatedCart = {\n        ...cart,\n        items: updatedItems\n      };\n      setCart(updatedCart);\n      saveToLocalStorage(updatedCart);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Failed to update cart item'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeFromCart = async itemId => {\n    setLoading(true);\n    try {\n      const updatedItems = cart.items.filter(item => item.id !== itemId);\n      const updatedCart = {\n        ...cart,\n        items: updatedItems\n      };\n      setCart(updatedCart);\n      saveToLocalStorage(updatedCart);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Failed to remove from cart'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearCart = () => {\n    setCart({\n      items: [],\n      total_amount: 0\n    });\n    localStorage.removeItem('localCart');\n  };\n  const getCartItemCount = () => {\n    // Count the number of unique food items in the cart, not total portions\n    return cart.items.length;\n  };\n  const value = {\n    cart,\n    loading,\n    addToCart,\n    updateCartItem,\n    removeFromCart,\n    clearCart,\n    getCartItemCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"ARdB5l7SbSYvJXZv6VYz+ghybiU=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","items","total_amount","loading","setLoading","saveToLocalStorage","cartData","localStorage","setItem","JSON","stringify","loadFromLocalStorage","stored","getItem","parse","error","console","log","localCart","length","addToCart","mealId","portions","portionsPerPlate","plates","specialInstructions","mealDetails","newItem","id","Date","now","meal_id","special_instructions","name","price","image","image_url","updatedCart","success","updateCartItem","itemId","updates","updatedItems","map","item","removeFromCart","filter","clearCart","removeItem","getCartItemCount","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/teslimadekoya/Desktop/frontend copy/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState({ items: [], total_amount: 0 });\n  const [loading, setLoading] = useState(false);\n\n  // Simple localStorage helpers\n  const saveToLocalStorage = (cartData) => {\n    localStorage.setItem('localCart', JSON.stringify(cartData));\n  };\n\n  const loadFromLocalStorage = () => {\n    try {\n      const stored = localStorage.getItem('localCart');\n      return stored ? JSON.parse(stored) : { items: [], total_amount: 0 };\n    } catch (error) {\n      console.error('Error loading cart from localStorage:', error);\n      return { items: [], total_amount: 0 };\n    }\n  };\n\n  // Initialize cart on mount\n  useEffect(() => {\n    console.log('CartProvider: Initializing cart');\n    const localCart = loadFromLocalStorage();\n    if (localCart.items && localCart.items.length > 0) {\n      setCart(localCart);\n      console.log('CartProvider: Loaded cart from localStorage:', localCart);\n    }\n  }, []);\n\n  // Auto-save cart to localStorage whenever it changes\n  useEffect(() => {\n    if (cart.items && cart.items.length > 0) {\n      saveToLocalStorage(cart);\n      console.log('CartProvider: Auto-saved cart to localStorage:', cart);\n    }\n  }, [cart]);\n\n  const addToCart = async (mealId, portions = 1, portionsPerPlate = 1, plates = 1, specialInstructions = '', mealDetails = null) => {\n    console.log('Adding to cart:', { mealId, portions, portionsPerPlate, plates, mealDetails });\n    \n    setLoading(true);\n    \n    try {\n      // Always use localStorage for now - simple and reliable\n      const newItem = {\n        id: Date.now(),\n        meal_id: mealId,\n        portions: portions,\n        portionsPerPlate: portionsPerPlate,\n        plates: plates,\n        special_instructions: specialInstructions,\n        name: mealDetails?.name || `Meal ${mealId}`,\n        price: mealDetails?.price || 0,\n        image: mealDetails?.image || mealDetails?.image_url || '/images/menu/foodHovered.png'\n      };\n\n      const updatedCart = {\n        ...cart,\n        items: [...cart.items, newItem],\n        total_amount: cart.total_amount + (portions * (mealDetails?.price || 0))\n      };\n\n      setCart(updatedCart);\n      saveToLocalStorage(updatedCart);\n      \n      console.log('Successfully added to cart:', updatedCart);\n      return { success: true };\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      return { success: false, error: 'Failed to add to cart' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateCartItem = async (itemId, updates) => {\n    setLoading(true);\n    \n    try {\n      const updatedItems = cart.items.map(item => \n        item.id === itemId ? { ...item, ...updates } : item\n      );\n      \n      const updatedCart = {\n        ...cart,\n        items: updatedItems\n      };\n      \n      setCart(updatedCart);\n      saveToLocalStorage(updatedCart);\n      \n      return { success: true };\n    } catch (error) {\n      return { success: false, error: 'Failed to update cart item' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeFromCart = async (itemId) => {\n    setLoading(true);\n    \n    try {\n      const updatedItems = cart.items.filter(item => item.id !== itemId);\n      \n      const updatedCart = {\n        ...cart,\n        items: updatedItems\n      };\n      \n      setCart(updatedCart);\n      saveToLocalStorage(updatedCart);\n      \n      return { success: true };\n    } catch (error) {\n      return { success: false, error: 'Failed to remove from cart' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart({ items: [], total_amount: 0 });\n    localStorage.removeItem('localCart');\n  };\n\n  const getCartItemCount = () => {\n    // Count the number of unique food items in the cart, not total portions\n    return cart.items.length;\n  };\n\n  const value = {\n    cart,\n    loading,\n    addToCart,\n    updateCartItem,\n    removeFromCart,\n    clearCart,\n    getCartItemCount,\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}